{
	"api": {
		"": {
			"class": [
				{
					"name": "AssetAdapter",
					"description": "//////////////////////////////////////////////////////////////////////////////////////"
				},
				{
					"name": "Main",
					"description": "//////////////////////////////////////////////////////////////////////////////////////"
				},
				{
					"name": "JSONProcessor",
					"description": ""
				},
				{
					"name": "WX",
					"description": ""
				},
				{
					"name": "DebugPlatform",
					"description": ""
				},
				{
					"name": "ThemeAdapter",
					"description": "//////////////////////////////////////////////////////////////////////////////////////"
				},
				{
					"name": "Dictionary",
					"description": "字典型的数据存取类。"
				},
				{
					"name": "AudioManager",
					"description": ""
				},
				{
					"name": "DateUtils",
					"description": "日期处理类本类包含以下功能：1、计算网络延迟2、设置、获取服务器时间3、格式化时间格式"
				},
				{
					"name": "ImageFactory",
					"description": "图片工厂本类功能：1、图片对象池管理2、如对象池无图片对象则创建对象"
				},
				{
					"name": "MCFactory",
					"description": "影片剪辑工厂本类功能：1、影片剪辑对象池管理2、如对象池无影片剪辑对象则创建对象"
				},
				{
					"name": "MathUtils",
					"description": "数学工具类"
				},
				{
					"name": "TimerManager",
					"description": "定时器管理器本类为setTimeout及setInterval和Timer的替代实现，主要是方便程序中Timer事件的生命周期管理，使用起来更为便利。程序中如用到setTimeout，setInterval及Timer的地方应尽量选择此方案。"
				},
				{
					"name": "TickData",
					"description": ""
				},
				{
					"name": "WebUtils",
					"description": "web工具类"
				},
				{
					"name": "md5",
					"description": ""
				},
				{
					"name": "GameVo",
					"description": ""
				},
				{
					"name": "ModuleMeditore",
					"description": ""
				},
				{
					"name": "ConfigCenter",
					"description": ""
				},
				{
					"name": "ConfigUtil",
					"description": "// TypeScript file"
				},
				{
					"name": "DoubleKeyConfig",
					"description": ""
				},
				{
					"name": "UserData",
					"description": ""
				},
				{
					"name": "NotificationDef",
					"description": ""
				},
				{
					"name": "CustomProgress",
					"description": ""
				},
				{
					"name": "ImageC",
					"description": ""
				},
				{
					"name": "LoadingUI",
					"description": "//////////////////////////////////////////////////////////////////////////////////////"
				},
				{
					"name": "PreLoadView",
					"description": ""
				},
				{
					"name": "GameInitHandler",
					"description": ""
				},
				{
					"name": "LoginSelect",
					"description": ""
				},
				{
					"name": "NetLogin",
					"description": "登录流程拿到登录用户的信息：区别本地登录或者微信登录：请求区分列表"
				},
				{
					"name": "SecondRequestHandler",
					"description": ""
				},
				{
					"name": "CommonPanel",
					"description": ""
				},
				{
					"name": "MainScene",
					"description": ""
				},
				{
					"name": "ConfigValuesVO",
					"description": "GameConfigValues_json 配置表vo"
				},
				{
					"name": "CountUpdateManager",
					"description": ""
				},
				{
					"name": "FocusController",
					"description": ""
				},
				{
					"name": "WxRank",
					"description": ""
				},
				{
					"name": "BoxAnimation",
					"description": ""
				},
				{
					"name": "EUIAnimation",
					"description": ""
				},
				{
					"name": "UiAnimation",
					"description": ""
				},
				{
					"name": "SceneAnimation",
					"description": ""
				},
				{
					"name": "TipAnimation",
					"description": ""
				},
				{
					"name": "GameShare",
					"description": ""
				},
				{
					"name": "PlatformUtil",
					"description": ""
				},
				{
					"name": "GameHttp",
					"description": "后端请求统一处理类"
				},
				{
					"name": "NetCode",
					"description": ""
				},
				{
					"name": "RequestCacheData",
					"description": ""
				},
				{
					"name": "RequestError",
					"description": ""
				}
			],
			"interface": [
				{
					"name": "IWX",
					"description": "平台数据接口。由于每款游戏通常需要发布到多个平台上，所以提取出一个统一的接口用于开发者获取平台数据信息推荐开发者通过这种方式封装平台逻辑，以保证整体结构的稳定由于不同平台的接口形式各有不同，白鹭推荐开发者将所有接口封装为基于 Promise 的异步形式获取本次分享的群信息：wx.getShareInfo游戏数据托管在微信后台 wx.setUserCloudStorage()主动转发 wx.shareAppMessage"
				},
				{
					"name": "Platform",
					"description": ""
				},
				{
					"name": "Window",
					"description": ""
				},
				{
					"name": "IAnimationProps",
					"description": ""
				},
				{
					"name": "IShareInfo",
					"description": ""
				},
				{
					"name": "IRequestCacheData",
					"description": "// 数据集接口"
				}
			],
			"enum": [
				{
					"name": "LanguageType",
					"description": ""
				},
				{
					"name": "ShareRewardType",
					"description": ""
				},
				{
					"name": "ExtendType",
					"description": ""
				}
			]
		},
		"window": {
			"globalMember": [
				{
					"name": "PLogin",
					"description": ""
				},
				{
					"name": "PUser",
					"description": ""
				},
				{
					"name": "generateEUI",
					"description": ""
				},
				{
					"name": "generateEUI2",
					"description": ""
				},
				{
					"name": "generateJSON",
					"description": ""
				},
				{
					"name": "platform",
					"description": ""
				},
				{
					"name": "wx",
					"description": ""
				}
			]
		},
		"core": {
			"globalMember": [
				{
					"name": "hooks",
					"description": ""
				},
				{
					"name": "localStorage",
					"description": ""
				},
				{
					"name": "stage",
					"description": ""
				},
				{
					"name": "uiAnimation",
					"description": ""
				}
			],
			"globalFunction": [
				{
					"name": "addNotification",
					"description": ""
				},
				{
					"name": "forceHideSimpleLoading",
					"description": "强制隐藏载入条"
				},
				{
					"name": "getAllSingleton",
					"description": "获取所有的单例模式"
				},
				{
					"name": "getDefinitionInstance",
					"description": "获取指定类的实例 -- 微信小游戏环境下必须定义类在window"
				},
				{
					"name": "getDefinitionType",
					"description": "获取指定类的类型"
				},
				{
					"name": "getPreloadList",
					"description": "获取预加载列表"
				},
				{
					"name": "getServerTime",
					"description": ""
				},
				{
					"name": "getTypeId",
					"description": "返回指定类型的类型编号"
				},
				{
					"name": "hasMediator",
					"description": ""
				},
				{
					"name": "hasModel",
					"description": ""
				},
				{
					"name": "hasNotification",
					"description": ""
				},
				{
					"name": "hasTypeId",
					"description": "指定类型是否存在类型编号"
				},
				{
					"name": "hideSimpleLoading",
					"description": "隐藏简单载入条"
				},
				{
					"name": "invokeHook",
					"description": ""
				},
				{
					"name": "isInstance",
					"description": "是否实例"
				},
				{
					"name": "isType",
					"description": "是否类"
				},
				{
					"name": "mediator",
					"description": "注册Mediator"
				},
				{
					"name": "notice",
					"description": "注册监听"
				},
				{
					"name": "postNotification",
					"description": ""
				},
				{
					"name": "propertyChange",
					"description": "数据变更"
				},
				{
					"name": "registerMediator",
					"description": ""
				},
				{
					"name": "registerModel",
					"description": ""
				},
				{
					"name": "removeMediator",
					"description": ""
				},
				{
					"name": "removeModel",
					"description": ""
				},
				{
					"name": "removeNotification",
					"description": ""
				},
				{
					"name": "removeNotificationByContext",
					"description": ""
				},
				{
					"name": "removeNotificationByName",
					"description": ""
				},
				{
					"name": "request",
					"description": "发送网络请求"
				},
				{
					"name": "retrieveMediator",
					"description": ""
				},
				{
					"name": "retrieveModel",
					"description": ""
				},
				{
					"name": "run",
					"description": "框架入口类，本类应在程序主入口调用run方法进行初始化"
				},
				{
					"name": "sendNotification",
					"description": ""
				},
				{
					"name": "setServerTime",
					"description": ""
				},
				{
					"name": "showSimpleLoading",
					"description": "显示简单载入条"
				},
				{
					"name": "singleton",
					"description": "返回指定分类的类型单例"
				},
				{
					"name": "typeSingleton",
					"description": "返回指定分类的类型单例"
				}
			],
			"interface": [
				{
					"name": "IMediator",
					"description": ""
				},
				{
					"name": "IMovie",
					"description": ""
				},
				{
					"name": "IHook",
					"description": ""
				},
				{
					"name": "IHooks",
					"description": ""
				},
				{
					"name": "IUIHook",
					"description": ""
				},
				{
					"name": "IButtonHook",
					"description": ""
				},
				{
					"name": "INetworkHook",
					"description": ""
				},
				{
					"name": "ISocketHook",
					"description": ""
				},
				{
					"name": "IMessage",
					"description": "消息接口"
				},
				{
					"name": "IQueueBoxInfo",
					"description": ""
				},
				{
					"name": "IUIPreloadInfo",
					"description": "ui预加载信息"
				},
				{
					"name": "IModel",
					"description": ""
				},
				{
					"name": "INotification",
					"description": ""
				},
				{
					"name": "IObserver",
					"description": ""
				},
				{
					"name": "IRequestInfo",
					"description": ""
				},
				{
					"name": "IComponent",
					"description": ""
				},
				{
					"name": "IListenerOption",
					"description": "事件监听参数接口"
				},
				{
					"name": "IPromptInfo",
					"description": ""
				},
				{
					"name": "TooltipInfo",
					"description": ""
				},
				{
					"name": "IUiAnimation",
					"description": ""
				},
				{
					"name": "ILocalStorage",
					"description": ""
				},
				{
					"name": "ILocalStorageProvider",
					"description": ""
				}
			],
			"class": [
				{
					"name": "Mediator",
					"description": ""
				},
				{
					"name": "CoreMediator",
					"description": ""
				},
				{
					"name": "BaseFactory",
					"description": ""
				},
				{
					"name": "MovieClip",
					"description": ""
				},
				{
					"name": "MovieEvent",
					"description": ""
				},
				{
					"name": "Config",
					"description": ""
				},
				{
					"name": "Callback",
					"description": "回调数据结构，提供this绑定功能extends egret.HashObject"
				},
				{
					"name": "EventData",
					"description": "事件数据类"
				},
				{
					"name": "KeyboardEventData",
					"description": "键盘事件数据类"
				},
				{
					"name": "CoreNotificationDef",
					"description": ""
				},
				{
					"name": "EventID",
					"description": "事件消息定义类"
				},
				{
					"name": "Hook",
					"description": ""
				},
				{
					"name": "Hooks",
					"description": ""
				},
				{
					"name": "CheckSceneVisibleMediator",
					"description": "检测场景的可视化控制器"
				},
				{
					"name": "ClearExpireUICacheMediator",
					"description": "清除过期的ui缓存 控制器"
				},
				{
					"name": "QueueBoxMediator",
					"description": "弹窗队列"
				},
				{
					"name": "MVCSystem",
					"description": ""
				},
				{
					"name": "Model",
					"description": ""
				},
				{
					"name": "Notification",
					"description": ""
				},
				{
					"name": "Observer",
					"description": "//实现观察者模式"
				},
				{
					"name": "HttpListenerHook",
					"description": ""
				},
				{
					"name": "NetworkRequest",
					"description": ""
				},
				{
					"name": "RequestEvent",
					"description": ""
				},
				{
					"name": "RequestNotice",
					"description": ""
				},
				{
					"name": "network",
					"description": ""
				},
				{
					"name": "AsyncServerTime",
					"description": ""
				},
				{
					"name": "Base64",
					"description": "本类为Base64编码的基础实现，本类为与C++服务器通信的定制实现，通用实现请使用DOMAPI。"
				},
				{
					"name": "display",
					"description": ""
				},
				{
					"name": "fun",
					"description": ""
				},
				{
					"name": "is",
					"description": ""
				},
				{
					"name": "md5",
					"description": ""
				},
				{
					"name": "obj",
					"description": ""
				},
				{
					"name": "ObjectPool",
					"description": "对象池"
				},
				{
					"name": "pool",
					"description": ""
				},
				{
					"name": "BaseComponent",
					"description": ""
				},
				{
					"name": "BaseFlexComponent",
					"description": ""
				},
				{
					"name": "Button",
					"description": ""
				},
				{
					"name": "ComponentState",
					"description": "组件状态"
				},
				{
					"name": "ItemRenderer",
					"description": ""
				},
				{
					"name": "PromptBox",
					"description": ""
				},
				{
					"name": "SimpleLoading",
					"description": ""
				},
				{
					"name": "TabBar",
					"description": ""
				},
				{
					"name": "Tooltip",
					"description": ""
				},
				{
					"name": "TooltipItem",
					"description": ""
				},
				{
					"name": "TooltipAnimation",
					"description": ""
				},
				{
					"name": "TooltipLayout",
					"description": ""
				},
				{
					"name": "UI",
					"description": ""
				},
				{
					"name": "UiAnimation",
					"description": ""
				},
				{
					"name": "EventManager",
					"description": "事件管理类实现功能：1、默认派发逻辑由发送事件触发，并延迟到下帧执行2、允许设置事件优先级3、设置每帧派发事件的上限、防止单帧执行事件过多4、监测性能耗时较多的回调事件，方便性能优化。"
				}
			],
			"enum": [
				{
					"name": "ProxyErrorCode",
					"description": ""
				},
				{
					"name": "PromptState",
					"description": ""
				},
				{
					"name": "UiType",
					"description": ""
				}
			]
		}
	},
	"other": {
		"global": {
			"class": [
				{
					"name": "Types",
					"description": "基础类型介绍"
				}
			]
		}
	}
}