{
	"member": [
		{
			"kind": "member",
			"type": "string",
			"name": "mediatorName",
			"memberof": "core.IMediator",
			"scope": "instance"
		}
	],
	"function": [
		{
			"kind": "function",
			"type": "string",
			"name": "getMediatorName",
			"memberof": "core.IMediator",
			"scope": "instance"
		},
		{
			"kind": "function",
			"type": "any",
			"name": "getViewComponent",
			"memberof": "core.IMediator",
			"scope": "instance"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "handleNotification",
			"memberof": "core.IMediator",
			"scope": "instance",
			"params": [
				{
					"name": "notification",
					"type": "core.INotification",
					"description": ""
				}
			]
		},
		{
			"kind": "function",
			"type": "string[]",
			"name": "listNotificationInterests",
			"memberof": "core.IMediator",
			"scope": "instance"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "onRegister",
			"memberof": "core.IMediator",
			"scope": "instance"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "onRemove",
			"memberof": "core.IMediator",
			"scope": "instance"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setViewComponent",
			"memberof": "core.IMediator",
			"scope": "instance",
			"params": [
				{
					"name": "viewComponent",
					"type": "any",
					"description": ""
				}
			]
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "interface",
		"name": "IMediator",
		"memberof": "core",
		"filename": "core\\mvc\\Mediator.ts"
	}
}